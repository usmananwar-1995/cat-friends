{"version":3,"sources":["components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","components/Card.js","components/CardList.js","constants.js","containers/App.js","actions.js","reportWebVitals.js","reducers.js","index.js"],"names":["SearchBox","changeSearch","className","type","placeholder","onChange","Scroll","children","ErrorBoundry","props","state","hasError","error","info","this","setState","Component","Card","id","name","email","src","alt","CardList","cats","map","cat","CHANGE_SEARCH_FIELD","GET_CATS_PENDING","GET_CATS_SUCCESS","GET_CATS_FAILED","App","onGetCats","content","searchFieldText","onChangeSearch","loading","filteredCats","filter","toLowerCase","includes","toString","connect","searchCats","getCats","dispatch","event","text","target","value","payload","fetch","then","response","json","users","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialSearchState","initialCatsState","logger","createLogger","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.003bb9be.chunk.js","sourcesContent":["import React from 'react';\n\nconst SearchBox = ({ changeSearch }) => {\n    return (\n        <div className='pa2'>\n            <input\n              className='pa2 ba b--green bg-lightest-blue'\n              type='search'\n              placeholder='Search Cats'\n              onChange={changeSearch}\n            />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = ({ children }) => {\n    return (\n        <div className='vh-75 overflow-y-scroll bt'>\n            { children }\n        </div>\n    );\n}\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({ hasError: true });\n    }\n\n    render() {\n        return this.state.hasError ? (<h2>Something went wrong! Please try again.</h2>) : this.props.children;\n    }\n}\n\nexport default ErrorBoundry;\n","import React from 'react';\n\nconst Card = ({ id, name, email }) => {\n\n    return (\n        <div className='dib ma2 pa2 bw2 br2 shadow-5 light-gray bg-near-black grow tc'>\n            <img src={`https://robohash.org/${id}?set=set4&size=200x200`} alt='Cat' />\n            <div>\n                <h2>{ name }</h2>\n                <p>{ email }</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ cats }) => {\n    return (\n        <div>\n            {\n                cats.map(cat => {\n                    return (\n                        <Card \n                            key={cat.id} \n                            id={cat.id} \n                            name={cat.name} \n                            email={cat.email} \n                        />\n                    )\n                })\n            }\n        </div>\n    );\n}\n\nexport default CardList;","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\n\nexport const GET_CATS_PENDING = 'GET_CATS_PENDING';\nexport const GET_CATS_SUCCESS = 'GET_CATS_SUCCESS';\nexport const GET_CATS_FAILED = 'GET_CATS_FAILED';","import React, { Component } from 'react';\nimport './App.css';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport CardList from '../components/CardList';\n\nimport { connect } from 'react-redux';\nimport { setSearchField, getCats } from '../actions';\n\nconst mapStateToProps = state => {\n    return {\n        searchFieldText: state.searchCats.searchFieldText,\n        loading: state.getCats.loading,\n        cats: state.getCats.cats,\n        error: state.getCats.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onChangeSearch: (event) => dispatch(setSearchField(event.target.value)),\n        onGetCats: () => dispatch(getCats())\n    }\n}\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.onGetCats();\n    }\n\n    render() {\n        const { searchFieldText, onChangeSearch, loading, cats, error } = this.props;\n        const filteredCats = cats.filter(cat => cat.name.toLowerCase().includes(searchFieldText.toLowerCase()));\n\n        let content;\n        if (error) {\n            content = (<h2>Error: {error.toString()}</h2>)\n        } else {\n            content = loading ? \n                    (<h1 className='navy'>Loading...</h1>) : \n                    (<Scroll>\n                        <ErrorBoundry>\n                            <CardList cats={filteredCats} />\n                        </ErrorBoundry>\n                    </Scroll>)\n        }\n\n        return (\n            <div className='tc'>\n                <h1 className='f1 navy'>Cat Friends</h1>\n                <SearchBox changeSearch={onChangeSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { \n    CHANGE_SEARCH_FIELD,\n    GET_CATS_PENDING,\n    GET_CATS_SUCCESS,\n    GET_CATS_FAILED\n} from './constants';\n\nexport const setSearchField = (text) => ({\n    type: CHANGE_SEARCH_FIELD,\n    payload: text\n});\n\nexport const getCats = () => (dispatch) => {\n    dispatch({ type: GET_CATS_PENDING });\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => dispatch({ type: GET_CATS_SUCCESS, payload: users }))\n    .catch(error => dispatch({ type: GET_CATS_FAILED, payload: error }));\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { \n    CHANGE_SEARCH_FIELD,\n    GET_CATS_PENDING,\n    GET_CATS_SUCCESS,\n    GET_CATS_FAILED\n} from './constants';\n\nconst initialSearchState = {\n    searchFieldText: ''\n}\n\nconst initialCatsState = {\n    loading: false,\n    cats: [],\n    error: ''\n}\n\nexport const searchCats = (state = initialSearchState, action = {}) => {\n    switch (action.type) {\n        case CHANGE_SEARCH_FIELD:\n            return { ...state, searchFieldText: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport const getCats = (state = initialCatsState, action = {}) => {\n    switch (action.type) {\n        case GET_CATS_PENDING:\n            return { ...state, loading: true };\n        case GET_CATS_SUCCESS:\n            return { ...state, loading: false, cats: action.payload };\n        case GET_CATS_FAILED:\n            return { ...state, loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport { searchCats, getCats } from './reducers';\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({ searchCats, getCats });\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}